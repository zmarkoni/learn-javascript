/*
    The basic structure of Sequence is a container element, an unordered list <ul class="sequence-canvas"> (the canvas) 
    and list items <li> (the frames), as shown below. Slika sequence-structure.jpg

    The container is used to define a width and height of your Sequence instance and is also used to append additional 
    elements such as navigation and pagination.

    When you come to style this basic structure in a moment, the canvas and frames will all be the same size as the container. 
    The canvas holds your frames, of which, each sit on top of each other. When a frame is active, it will be given a higher z-index than the rest, so the active frame is always on top.

    The frames will then hold your content. Sequence will expect any top level element within a frame to have a transition 
    applied to it, which you’ll see shortly.

*/

/*Sequence container:*/
#sequence {
    border: black solid 3px;
    height: 370px;
    margin: 10px auto;
    position: relative; /* required */
    width: 450px;
}

/*top level content elements within a frame*/
#sequence > .sequence-canvas li > * {  /* required */
    position: absolute;
}

/*To make the canvas the same size as the container, add the following:*/
#sequence > .sequence-canvas { /* required */
    height: 100%; 
    width: 100%;
}

/*Finally, add some declarations to each frame:*/

#sequence > .sequence-canvas > li { /* required */
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: 1;
}

/*style the <div> within each frame:*/
.info1,
.info2,
.info3 {
    background: #3f7ad6;
    color: white;
    height: 95px;
    padding: 5px;
    width: 95px;
}

/*How Sequence’s Animations Work
Each top level element within a frame will be animated by Sequence, 
but how that animation happens is entirely your choice and created using CSS3 transitions.*/

/*Now, begin applying transitional properties:*/

.info1 {
    left: -150px;
    top: 10px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}

.animate-in .info1 {
    left: 165px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}
.animate-out .info1 {
    left: 500px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}
/*info2*/
.info2 {
    left: -150px;
    top: -100px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}

.animate-in .info2 {
    left: 300px;
    top:300px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}
.animate-out .info{
    left: 600px;
    top:600px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}
/*info3*/
.info3 {
    left: 0;
    top: -200px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}

.animate-in .info3 {
    top: 200px;
    left:200px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}
.animate-out .info3 {
    top:300px;
    left: 500px;
    -webkit-transition-duration: 1s;
    -moz-transition-duration: 1s;
    -o-transition-duration: 1s;
    -ms-transition-duration: 1s;
    transition-duration: 1s;
}


